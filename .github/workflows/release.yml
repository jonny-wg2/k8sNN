name: Build and Release K8sNN

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-and-release:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: Build K8sNN
      run: |
          # Build the app with ad-hoc signing
          xcodebuild -project K8sNN.xcodeproj \
            -scheme K8sNN \
            -configuration Release \
            -derivedDataPath build \
            CODE_SIGN_IDENTITY="-" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO

          # Copy the built app
          mkdir -p build/export
          cp -R build/Build/Products/Release/K8sNN.app build/export/

          # Ad-hoc sign the app
          codesign --force --deep --sign - build/export/K8sNN.app

    - name: Create DMG
      run: |
        # Create a temporary directory for DMG contents
        mkdir -p dmg_temp
        cp -R build/export/K8sNN.app dmg_temp/

        # Create Applications symlink
        ln -s /Applications dmg_temp/Applications

        # Create DMG
        hdiutil create -volname "K8sNN" \
          -srcfolder dmg_temp \
          -ov -format UDZO \
          K8sNN.dmg

    - name: Create ZIP archive
      run: |
        cd build/export
        zip -r ../../K8sNN.zip K8sNN.app

    - name: Get version from tag
      id: get_version
      run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION="dev-$(date +%Y%m%d-%H%M%S)"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")

        if [ -n "$PREVIOUS_TAG" ]; then
          echo "Generating changelog from $PREVIOUS_TAG to HEAD"
          # Get commits between previous tag and current
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD --reverse)
        else
          echo "No previous tag found, generating changelog from first commit"
          # Get all commits if this is the first tag
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" --reverse)
        fi

        # Handle empty changelog
        if [ -z "$CHANGELOG" ]; then
          CHANGELOG="- Initial release"
        fi

        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: K8sNN ${{ steps.get_version.outputs.version }}
          body: |
            ## K8sNN - Kubernetes Cluster Authentication Monitor

            ### What's New in this Release
            ${{ steps.changelog.outputs.changelog }}

            ### Features
            - Beautiful macOS menubar app for monitoring Kubernetes cluster authentication
            - Real-time authentication status indicators
            - One-click access to Dex login pages
            - Spotlight-style cluster search interface
            - Automatic cluster discovery from kubectl config

            ### Installation

            **Option 1: DMG Installer (Recommended)**
            1. Download `K8sNN.dmg`
            2. Double-click to mount the disk image
            3. Drag K8sNN.app to the Applications folder
            4. Launch from Applications or Spotlight

            **Option 2: ZIP Archive**
            1. Download `K8sNN.zip`
            2. Extract the archive
            3. Move K8sNN.app to your Applications folder
            4. Launch from Applications or Spotlight

            ### Requirements
            - macOS 14.0 or later
            - kubectl installed and configured

            ### First Launch
            1. The app will appear in your menubar with a server icon
            2. Click the icon to see your Kubernetes clusters
            3. Green dots = authenticated, red dots = need login
            4. Click red clusters to open their login pages

            ### Security Notice
            This app is ad-hoc signed (not signed with a paid Apple Developer certificate).

            **If you see a security warning:**
            1. Go to System Preferences > Security & Privacy > General
            2. Click "Open Anyway" next to the K8sNN warning
            3. Or right-click the app and select "Open"

            See [INSTALLATION.md](INSTALLATION.md) for detailed instructions.

          files: |
            K8sNN.dmg
            K8sNN.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
